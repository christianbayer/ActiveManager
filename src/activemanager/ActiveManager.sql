-- MySQL Script generated by MySQL Workbench
-- qua 08 mar 2017 19:50:51 BRT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema active_manager
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `active_manager` DEFAULT CHARACTER SET utf8 ;
USE `active_manager` ;

-- -----------------------------------------------------
-- Table `active_manager`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NULL,
  `biography` VARCHAR(255) NULL,
  `role_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_users_roles_id` (`role_id` ASC),
  CONSTRAINT `fk_users_roles`
    FOREIGN KEY (`role_id`)
    REFERENCES `active_manager`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`issues_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`issues_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`projects_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`projects_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`projects` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  `is_public` TINYINT(1) NOT NULL,
  `project_type_id` INT NOT NULL,
  `manager_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_projects_projects_types1_idx` (`project_type_id` ASC),
  INDEX `fk_projects_users2_idx` (`manager_id` ASC),
  CONSTRAINT `fk_projects_projects_types1`
    FOREIGN KEY (`project_type_id`)
    REFERENCES `active_manager`.`projects_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_projects_users2`
    FOREIGN KEY (`manager_id`)
    REFERENCES `active_manager`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`issues_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`issues_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`users_projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`users_projects` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_users_has_projects_projects1_idx` (`project_id` ASC),
  INDEX `fk_users_has_projects_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_users_has_projects_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `active_manager`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_projects_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `active_manager`.`projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`issues_priorities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`issues_priorities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`issues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`issues` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_id` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  `issue_type_id` INT NOT NULL,
  `issue_status_id` INT NOT NULL,
  `issue_priority_id` INT NOT NULL,
  `assigned_user_id` INT NOT NULL,
  `done_ratio` INT NULL,
  `due_date` DATE NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  `estimated_hours` FLOAT NULL,
  `spent_hours` FLOAT NULL,
  `parent_issue_id` INT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_issues_issues_types_idx` (`issue_type_id` ASC),
  INDEX `fk_issues_issues_status1_idx` (`issue_status_id` ASC),
  INDEX `fk_issues_projects1_idx` (`project_id` ASC),
  INDEX `fk_issues_issues1_idx` (`parent_issue_id` ASC),
  INDEX `fk_issues_users_projects1_idx` (`assigned_user_id` ASC),
  INDEX `fk_issues_issues_priorities1_idx` (`issue_priority_id` ASC),
  CONSTRAINT `fk_issues_issues_types`
    FOREIGN KEY (`issue_type_id`)
    REFERENCES `active_manager`.`issues_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_issues_issues_status1`
    FOREIGN KEY (`issue_status_id`)
    REFERENCES `active_manager`.`issues_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_issues_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `active_manager`.`projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_issues_issues1`
    FOREIGN KEY (`parent_issue_id`)
    REFERENCES `active_manager`.`issues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_issues_users_projects1`
    FOREIGN KEY (`assigned_user_id`)
    REFERENCES `active_manager`.`users_projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_issues_issues_priorities1`
    FOREIGN KEY (`issue_priority_id`)
    REFERENCES `active_manager`.`issues_priorities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`journals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`journals` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `issue_id` INT NOT NULL,
  `description` TEXT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_journal_issues1_idx` (`issue_id` ASC),
  CONSTRAINT `fk_journal_issues1`
    FOREIGN KEY (`issue_id`)
    REFERENCES `active_manager`.`issues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`issues_historics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`issues_historics` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `issue_id` INT NOT NULL,
  `title` VARCHAR(255) NULL,
  `description` TEXT NULL,
  `issue_type_id` INT NULL,
  `issue_status_id` INT NULL,
  `issue_priority_id` INT NULL,
  `assigned_user_id` INT NULL,
  `done_ratio` INT NULL,
  `due_date` DATE NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  `estimated_hours` FLOAT NULL,
  `spent_hours` FLOAT NULL,
  `parent_issue_id` INT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_issues_history_issues1_idx` (`issue_id` ASC),
  CONSTRAINT `fk_issues_history_issues1`
    FOREIGN KEY (`issue_id`)
    REFERENCES `active_manager`.`issues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `active_manager`.`projects_historics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `active_manager`.`projects_historics` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_id` INT NOT NULL,
  `title` VARCHAR(255) NULL,
  `description` TEXT NULL,
  `is_public` TINYINT(1) NULL,
  `project_type_id` INT NULL,
  `manager_id` INT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_projects_history_projects1_idx` (`project_id` ASC),
  CONSTRAINT `fk_projects_history_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `active_manager`.`projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;